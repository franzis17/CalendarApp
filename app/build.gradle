/*
 * From the tutorial example:
 * - JavaCC gradle plugin:
 *   > Note: we're using the third-party JavaCC Gradle plugin:
 *     https://github.com/IntershopCommunicationsAG/javacc-gradle-plugin
 */

plugins {
    id 'application'
    // JavaCC From the tutorial example
    id 'com.intershop.gradle.javacc' version '4.0.1'
}

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    
    
    // [ subproject dependencies ]
    implementation project(':terminalgrid')
    implementation project(':api')
    implementation project(':plugins')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

javacc {
    configs {
        createmyparser {
            inputFile = file('src/main/jj/calendarapp/app/FileParser.jj')
            packageName = 'calendarapp.app'
            // Enable to see 2 tokens ahead when deciding which function to read
            // (specifically used for AllDayEvent() and HourlyEvent())
            lookahead = '2'
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'calendarapp.app.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
